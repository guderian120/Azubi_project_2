name: Build and Push Docker Images

on:
  push:
    branches: [main]
    paths:
      - 'front-end/**'
      - 'back-end/**'
  pull_request:
    branches: [main]
    paths:
      - 'front-end/**'
      - 'back-end/**'

env:
  DOCKER_BUILDKIT: 1
  DOCKER_HUB_REPO: realamponsah/azubi_project_2

jobs:
  detect-changes:
    runs-on: ubuntu-latest
    outputs:
      build-frontend: ${{ steps.check-dirs.outputs.frontend }}
      build-backend: ${{ steps.check-dirs.outputs.backend }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Get full history for proper diffing
      
      - name: Check changed directories
        id: check-dirs
        run: |
          echo "Checking changed files..."
          
          # For PRs, compare between base and head
          if [ "${{ github.event_name }}" = "pull_request" ]; then
            base_sha="${{ github.event.pull_request.base.sha }}"
            head_sha="${{ github.event.pull_request.head.sha }}"
            changed_files=$(git diff --name-only $base_sha $head_sha 2>/dev/null || echo "")
          else
            # For pushes, compare between the last commit and the current one
            changed_files=$(git diff --name-only ${{ github.event.before }} ${{ github.sha }} 2>/dev/null || echo "")
          fi
          
          echo "Changed files:"
          echo "$changed_files"
          
          # Check for frontend changes
          if echo "$changed_files" | grep -q '^front-end/'; then
            echo "frontend=true" >> $GITHUB_OUTPUT
          else
            echo "frontend=false" >> $GITHUB_OUTPUT
          fi
          
          # Check for backend changes
          if echo "$changed_files" | grep -q '^back-end/'; then
            echo "backend=true" >> $GITHUB_OUTPUT
          else
            echo "backend=false" >> $GITHUB_OUTPUT
          fi
          
          echo "Build frontend: ${{ steps.check-dirs.outputs.frontend }}"
          echo "Build backend: ${{ steps.check-dirs.outputs.backend }}"

  build-and-push:
    needs: detect-changes
    runs-on: ubuntu-latest
    strategy:
      matrix:
        component: [frontend, backend]
        include:
          - component: frontend
            directory: front-end
            dockerfile: front-end/Dockerfile
          - component: backend
            directory: back-end
            dockerfile: back-end/Dockerfile
    steps:
      - uses: actions/checkout@v4

      - name: Check if component should be built
        id: should-build
        run: |
          if [ "${{ matrix.component }}" = "frontend" ] && [ "${{ needs.detect-changes.outputs.build-frontend }}" = "true" ]; then
            echo "build=true" >> $GITHUB_OUTPUT
          elif [ "${{ matrix.component }}" = "backend" ] && [ "${{ needs.detect-changes.outputs.build-backend }}" = "true" ]; then
            echo "build=true" >> $GITHUB_OUTPUT
          else
            echo "build=false" >> $GITHUB_OUTPUT
          fi
          echo "Building ${{ matrix.component }}: ${{ steps.should-build.outputs.build }}"

      - name: Set up Docker Buildx
        if: steps.should-build.outputs.build == 'true'
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        if: steps.should-build.outputs.build == 'true'
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      - name: Build and push Docker image
        if: steps.should-build.outputs.build == 'true'
        run: |
          echo "Building ${{ matrix.component }} from ${{ matrix.directory }}"
          cd ${{ matrix.directory }}
          
          if [ "${{ github.event_name }}" = "pull_request" ]; then
            TAG="pr-${{ github.event.number }}"
          else
            TAG="${{ github.sha }}"
          fi
          
          echo "Building with tag: $TAG"
          docker build -t ${{ env.DOCKER_HUB_REPO }}-${{ matrix.component }}:$TAG .
          
          echo "Pushing image..."
          docker push ${{ env.DOCKER_HUB_REPO }}-${{ matrix.component }}:$TAG
          
          if [ "${{ github.event_name }}" = "push" ]; then
            echo "Tagging and pushing latest..."
            docker tag ${{ env.DOCKER_HUB_REPO }}-${{ matrix.component }}:$TAG ${{ env.DOCKER_HUB_REPO }}-${{ matrix.component }}:latest
            docker push ${{ env.DOCKER_HUB_REPO }}-${{ matrix.component }}:latest
          fi