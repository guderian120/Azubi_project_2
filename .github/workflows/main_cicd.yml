name: Build and Push Docker Images
 
on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  DOCKER_BUILDKIT: 1
  DOCKER_HUB_REPO: realamponsah/azubi_project_2

jobs:
  detect-changes:
    runs-on: ubuntu-latest
    outputs:
      build-frontend: ${{ steps.check-dirs.outputs.frontend }}
      build-backend: ${{ steps.check-dirs.outputs.backend }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 2
      - name: Debug git diff
        run: |
          echo "================ FULL GIT DIFF ================"
          if [ "${{ github.event_name }}" = "pull_request" ]; then
            echo "Comparing PR: ${{ github.event.pull_request.base.sha }}..${{ github.event.pull_request.head.sha }}"
            git diff --name-only ${{ github.event.pull_request.base.sha }}..${{ github.event.pull_request.head.sha }}
            echo "---------------- Detailed Diff ----------------"
            git diff ${{ github.event.pull_request.base.sha }}..${{ github.event.pull_request.head.sha }}
          else
            echo "Comparing push: HEAD~1..HEAD"
            git diff --name-only HEAD~1..HEAD
            echo "---------------- Detailed Diff ----------------"
            git diff HEAD~1..HEAD
          fi
          echo "=============================================="
      - name: Check changed directories
        id: check-dirs
        run: |
          echo "Checking changed files..."
          if [ "${{ github.event_name }}" = "pull_request" ]; then
            changed_files=$(git diff --name-only ${{ github.event.pull_request.base.sha }} ${{ github.event.pull_request.head.sha }})
            git diff
          else
            changed_files=$(git diff --name-only HEAD~1 HEAD)
          fi
          
          echo "Changed files:"
          echo "$changed_files"
          
          if echo "$changed_files" | grep -q '^front-end/'; then
            echo "frontend=true" >> $GITHUB_OUTPUT
          else
            echo "frontend=false" >> $GITHUB_OUTPUT
          fi
          
          if echo "$changed_files" | grep -q '^back-end/'; then
            echo "backend=true" >> $GITHUB_OUTPUT
          else
            echo "backend=false" >> $GITHUB_OUTPUT
          fi

  build-and-push:
    needs: detect-changes
    runs-on: ubuntu-latest
    strategy:
      matrix:
        component: [frontend, backend]
        include:
          - component: frontend
            directory: front-end
            dockerfile: front-end/Dockerfile
          - component: backend
            directory: back-end
            dockerfile: back-end/Dockerfile
    steps:
      - uses: actions/checkout@v4

      - name: Verify directory exists
        id: check-dir
        run: |
          echo "Checking for ${{ matrix.directory }} directory..."
          if [ -d "${{ matrix.directory }}" ]; then
            echo "Directory exists"
            echo "exists=true" >> $GITHUB_OUTPUT
            echo "Contents of ${{ matrix.directory }}:"
            ls -la "${{ matrix.directory }}"
          else
            echo "Directory does not exist"
            echo "exists=false" >> $GITHUB_OUTPUT
            echo "Root directory contents:"
            ls -la
          fi

      - name: Set up Docker Buildx
        if: steps.check-dir.outputs.exists == 'true'
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        if: steps.check-dir.outputs.exists == 'true'
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      - name: Build and push Docker image
        if: needs.detect-changes.outputs.build-frontend == 'true' || needs.detect-changes.outputs.build-backend == 'true'
        run: |
          echo "Building ${{ matrix.component }} from ${{ matrix.directory }}"
          cd ${{ matrix.directory }}
          
          if [ "${{ github.event_name }}" = "pull_request" ]; then
            TAG="pr-${{ github.event.number }}"
          else
            TAG="${{ github.sha }}"
          fi
          
          echo "Building with tag: $TAG"
          docker build -t ${{ env.DOCKER_HUB_REPO }}-${{ matrix.component }}:$TAG .
          
          echo "Pushing image..."
          docker push ${{ env.DOCKER_HUB_REPO }}-${{ matrix.component }}:$TAG
          
          if [ "${{ github.event_name }}" = "push" ]; then
            echo "Tagging and pushing latest..."
            docker tag ${{ env.DOCKER_HUB_REPO }}-${{ matrix.component }}:$TAG ${{ env.DOCKER_HUB_REPO }}-${{ matrix.component }}:latest
            docker push ${{ env.DOCKER_HUB_REPO }}-${{ matrix.component }}:latest
          fi
